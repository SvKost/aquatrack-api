openapi: 3.0.3
info:
  title: AquaTrack - OpenAPI 3.0
  description: |-
    This is a AquaTrack based on the OpenAPI 3.0 specification.
  version: 1.0.0
externalDocs:
  description: AquaTrack
  url: https://veronikapetrushka.github.io/fullstack-foundry/
servers:
  - url: https://aquatrack-api-myzh.onrender.com/api/
tags:
  - name: auth
    description: register, login and logout
  - name: users
    description: Operations about user
  - name: water
    description: Record daily water intake and track
paths:
  /auth/register:
    post:
      tags:
        - auth
      summary: Add a new user
      description: Add a new user
      operationId: register
      requestBody:
        description: Create a new user
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "yourname@mail.com"
                password:
                  type: string
                repeatPassword:
                  type: string
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
        '409':
          description: Email in use!
        '400':
          description: Validation exception
  /auth/login:
    post:
      tags:
        - auth
      summary: Logs user into the system
      description: ''
      operationId: login
      requestBody:
        description: Create a new user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/baseUser'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  token: 
                    type: string
                  user: 
                    type: object
                    properties:
                      email: 
                        type: string
                      
        '401':
          description: Email or password is wrong!
  /auth/logout:
    post:
      tags:
        - auth
      summary: Logs out current logged in user session
      description: ''
      operationId: logout
      security:
        - bearerAuth: []
      responses:
        '204':
          description: successful operation
  /auth/verify:
    post:
      tags:
        - auth
      summary: Resend verification email
      description: ''
      operationId: verifyResend
      requestBody:
        description: User email
        content:
          application/json:
            schema:
              properties:
                email:
                  type: string
        required: true
      responses:
        '200':
            description: Successfull operation
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: "Verification email sent"
        '404':
          description: 'User not found'
  /auth/verify/{verificationToken}:
    post:
      tags:
        - auth
      summary: Verify user email
      description: ''
      operationId: verify
      parameters:
        - name: verificationToken
          in: path
          description: 'Verification token sended in email'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfull operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Email verified"
        '404':
          description: User not found
  /users/count-users:
    get:
      tags:
        - users
      summary: return total registered users
      description: ''
      operationId: countUsers
      responses:
        '200':
          description: Successfull operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalUsers:
                    type: integer
                    example: 120
components:
  schemas:
    baseUser:
      type: object
      properties:
        email:
          type: string
          example: yourmail@mail.com
        password:
          type: string
          example: 'JSD78jfk*hjd'
  securitySchemes:
    bearerAuth:
      type: 'http'
      scheme: 'bearer'
      bearerFormat: 'JWT'
